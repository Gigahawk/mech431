#+TITLE: MECH 431 2019S - Assignment 1
#+SUBTITLE: BLACK TEA
#+OPTIONS: toc:nil

* 
What are your fixed costs, and what are your variable costs?
What are your recurring costs, and what are one time?
** Fixed and varaible costs
Most of the costs are variable, with the only real fixed cost being the payments to the Bubble Tea Mafia.
All other costs are variable, at least at the time of purchase:
- You could choose to spend more or less money on a cart
  - This would affect things like carrying capacity (for ingredients, etc) and insulation efficiency, which would have affects on things like the maximum amount of bubble tea you could sell in a day, or money spent on buying ice
- The amount of ice you need on a given day depends on factors like how hot it is, how much product you have to keep cool, etc.
- Milk, tea, and toppings costs are determined by how much bubble tea you think you can sell, and the particular suppliers you choose to order from.
  - The cost of toppings can be particularly variable if you notice that certain kinds of toppings sell better or worse.
  - Different suppliers may provide products of different percieved quality, however even replacing an ingredient for one of higher percieved quality may lead to backlash from customers who prefer the old recipe
- Paying for better equipment could mean faster production, or less weight (you still have to move the cart home at the end of the day)
- The amount paid in bribes depends on the amount of risk you're willing to take, as societal factors (i.e. there may be a sudden crackdown on illegal bubble tea businesses and now you have a lot more police on your back)
** Recurring costs
All equipment is a one time costs (assuming you never need to replace or upgrade it), as well as the startup licensing fee.
All other costs are recurring.

*** Observations
Unless they've been included under various equipment or toppings, it appears that there is no recurring cost for utensils (cups, straws, napkins, etc.) listed.
Perhaps this is an aggressively eco-friendly business.
* 
You are thinking of opening a second stand in a nearby neighborhood.
It's controlled by the same mafia group, but the area only has half the population as your current stand.
Estimate your costs and revenues for this location.
What model(s) did you use and why?
** Assumptions
- The only difference between the two populations is size 
  - It's hard to know if the income in this area is different without further information. An area could be less populated because it has more expensive and sparse housing, or because it is more rural
  - Presumably the number of bubble tea drinkers/brother-in-law snack eaters is also  proportionally the same between both populations.
- A smaller neighborhood means a quieter neighborhood
  - Police patrol this area less frequently
- The revenue history of your existing business is fairly consistent and can be taken as representative of future history
- Your brother-in-law does not sell his snacks on the side.
  - He's no businessman, he just likes baking.
- The price of commodities don't change very much at the amounts we're purchasing
  - Accounting for this makes the model a lot more complicated and would require a lot more research
- The mafia payments are for *permission* to operate in the turf regardless of the number of operations, meaning that no further payments have to be made for a second stand.
** Model
#+BEGIN_SRC ipython :session 
# Costs/revenues of the original business (recurrent values calculated monthly)
cart_orig = 14000.0
ice_orig = 500.0
milk_orig = 1500.0
tea_orig = 2000.0
equip_orig = 4000.0
top_orig = 3500.0
bribe_orig = 12000.0/12

bbl_tea_rev_orig = 14000.0
bil_snack_rev_orig = 3500.0/2

# Percentage of product demand relative to original location
bbl_tea_amt = 1
bil_snack_amt = 1
#+END_SRC

#+RESULTS:
: # Out[1]:

Given that there's half as many potential customers on the market we can divide the demand from both the snacks and bubble tea in half

#+BEGIN_SRC ipython :session 
bbl_tea_amt /= 2
bil_snack_amt /= 2
#+END_SRC

#+RESULTS:
: # Out[2]:

Because the market cap for bubble tea is smaller in this new area, there may be less competition since the market is less lucrative.
Let's assume in this new area you can capture an extra 15% of whatever percentage of the market you had previously.
Note that this does not apply to your brother-in-law's snacks, since if they are truly special you would own the entire market.

#+BEGIN_SRC ipython :session 
bbl_tea_amt *= 1.15
#+END_SRC

#+RESULTS:
: # Out[3]:

From this we can ballpark some other costs and our revenues:
#+BEGIN_SRC ipython :session 
# Less demand, smaller cart, lower capacity equipment
cart = 10000.0
equip = 3000.0
# Scale down ingredient costs for lower demand
ice = ice_orig * bbl_tea_amt
milk = milk_orig * bbl_tea_amt
tea = tea_orig * bbl_tea_amt
top = top_orig * bbl_tea_amt

bbl_tea_rev = bbl_tea_rev_orig * bbl_tea_amt
bil_snack_rev = bil_snack_rev_orig * bil_snack_amt
#+END_SRC

#+RESULTS:
: # Out[4]:

Since the neighborhood has less cops patrolling, let's say you only need to bribe the police 80% as often
#+BEGIN_SRC ipython :session
bribe = bribe_orig * 0.8
#+END_SRC

#+RESULTS:
: # Out[5]:

Unless you somehow invent teleportation in the process of starting your new business, you will have to find someone to run this second location.
You don't want to risk having an underpaid and disgruntled worker potentially destroying your investment, so you offer to pay $18/hour from 11am to 3pm[fn:hours] as a starting wage.
#+BEGIN_SRC ipython :session
hrs = 4 * 5 # per week
pay = 18.0 # per hour
empl = 4.5 * hrs * pay # pay per month

#+END_SRC

#+RESULTS:
: # Out[29]:

[fn:hours] This seems to be a relatively common set of hours for food trucks to be working





Now we have all our costs:
#+BEGIN_SRC ipython :session :results output raw drawer :exports results
from tabulate import tabulate
from pandas import DataFrame

names = """Cart
Ice (monthly)
Milk (monthly)
Tea (monthly)
Various Equipment
Toppings (monthly)
Bribes (monthly)
Employee (monthly)""".split("\n")

value_text = f"""{cart:.2f}
{ice:.2f}
{milk:.2f}
{tea:.2f}
{equip:.2f}
{top:.2f}
{bribe:.2f}
{empl:.2f}""".split("\n")

total_cost_month = sum(
    [float(value_text[i]) if "monthly" in name else 0 for i, name in enumerate(names)])
total_cost_single = sum(
    [float(value_text[i]) if "monthly" not in name else 0 for i, name in enumerate(names)])

#value_text.extend(["", str(total)])
value_text = [f"${t}" if t else "---" for t in value_text]

total_text = [f"${v:.2f}" for v in (total_cost_month, total_cost_single)]

print('#+ATTR_LATEX: :align l | r')
print(tabulate(DataFrame([names, value_text]).T.values, tablefmt='orgtbl'))
print()
print('#+ATTR_LATEX: :align l | r')
print(tabulate(DataFrame([["Total Monthly Costs",
                           "Total Single Costs"],
                           total_text]).T.values, tablefmt='orgtbl'))

#+END_SRC

#+RESULTS:
:RESULTS:
#+ATTR_LATEX: :align l | r
| Cart               | $10000.00 |
| Ice (monthly)      | $287.50   |
| Milk (monthly)     | $862.50   |
| Tea (monthly)      | $1150.00  |
| Various Equipment  | $3000.00  |
| Toppings (monthly) | $2012.50  |
| Bribes (monthly)   | $800.00   |
| Employee (monthly) | $1620.00  |

#+ATTR_LATEX: :align l | r
| Total Monthly Costs | $6732.50  |
| Total Single Costs  | $13000.00 |
:END:


As well as our revenues
#+BEGIN_SRC ipython :session :results output raw drawer :exports results

names = """Bubble Tea (monthly)
Brother-in-law's Snacks (monthly)""".split("\n")

value_text = f"""{bbl_tea_rev:.2f}
{bil_snack_rev:.2f}""".split("\n")

total_rev_month = sum([float(f) for f in value_text])

#value_text.extend(["", str(total)])
value_text = [f"${t}" if t else "---" for t in value_text]

print('#+ATTR_LATEX: :align l | r')
print(tabulate(DataFrame([names, value_text]).T.values, tablefmt='orgtbl'))
print()
print('#+ATTR_LATEX: :align l | r')
print(tabulate(DataFrame(["Total Monthly Revenue", f"${total_rev_month:.2f}"]).T.values, tablefmt='orgtbl'))

#+END_SRC

#+RESULTS:
:RESULTS:
#+ATTR_LATEX: :align l | r
| Bubble Tea (monthly)              | $8050.00 |
| Brother-in-law's Snacks (monthly) | $875.00  |

#+ATTR_LATEX: :align l | r
| Total Monthly Revenue | $8925.00 |
:END:

* 
What is the payback period for opening the second stand?
Show this on a chart
What is the benefit/cost ratio for starting the second stand and running it for one year?
#+BEGIN_SRC ipython :session :exports none 
%matplotlib inline
%config InlineBackend.figure_format = 'svg'
from matplotlib import pyplot as plt
import matplotlib
import numpy as np

#+END_SRC

#+RESULTS:
: # Out[88]:

#+BEGIN_SRC ipython :session :results raw drawer :exports results

# Starting costs/revenues
costs = -total_cost_single
rev = 0

month_recouped = None
months = range(12)
costs_list = []
rev_list = []

for month in months:
    costs -= total_cost_month
    rev += total_rev_month
    costs_list.append(costs)
    rev_list.append(rev)

    if costs + rev > 0 and not month_recouped:
        month_recouped = month

costs_list = np.array(costs_list)
rev_list = np.array(rev_list)
    
plt.plot(months, costs_list, 'ro', label='Costs')
plt.plot(months, rev_list, 'go', label='Revenue')
plt.plot(months, costs_list+rev_list, 'bo', label='Profit')

plt.axhline(linewidth='1', color='k')
plt.ylabel('Money ($)')
plt.xlabel('Time (months)')
plt.legend()

profit = costs+rev

f"Costs recouped by {month_recouped}th month (0-indexed)"



#+END_SRC

#+RESULTS:
:RESULTS:
# Out[143]:
: 'Costs recouped by 5th month (0-indexed)'
[[file:./obipy-resources/315a8J.svg]]
:END:

By the end of the year, the benefit/cost ratio will be:
#+BEGIN_SRC ipython :session :results raw drawer :exports both
f"{abs(profit/costs):.3f}"

#+END_SRC

#+RESULTS:
:RESULTS:
# Out[144]:
: '0.142'
:END:

* 
Create a cashflow diagram for the combined two-stand operation (i.e. the total costs and revenues for both stands for two years)
#+BEGIN_SRC ipython :session



#+END_SRC
